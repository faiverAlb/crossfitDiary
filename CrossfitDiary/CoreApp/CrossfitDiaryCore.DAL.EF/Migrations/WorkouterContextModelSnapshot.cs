// <auto-generated />
using System;
using CrossfitDiaryCore.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrossfitDiaryCore.DAL.EF.Migrations
{
    [DbContext(typeof(WorkouterContext))]
    partial class WorkouterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrossfitDiaryCore.Model.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("CanPlanWorkouts")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowOnlyUserWods")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.CrossfitterWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CrossfitterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Distance")
                        .HasColumnType("int");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRx")
                        .HasColumnType("bit");

                    b.Property<int?>("PartialRepsFinished")
                        .HasColumnType("int");

                    b.Property<int?>("RepsToFinishOnCapTime")
                        .HasColumnType("int");

                    b.Property<int?>("RoundsFinished")
                        .HasColumnType("int");

                    b.Property<int>("RoutineComplexId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TimePassed")
                        .HasColumnType("time");

                    b.Property<bool>("WasFinished")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WodSubType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CrossfitterId");

                    b.HasIndex("RoutineComplexId");

                    b.ToTable("CrossfitterWorkout");
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercise");

                    b.HasData(
                        new
                        {
                            Id = 130,
                            Abbreviation = "HSC",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hang Squat Clean"
                        },
                        new
                        {
                            Id = 131,
                            Abbreviation = "HCP",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hang Clean Pull"
                        },
                        new
                        {
                            Id = 132,
                            Abbreviation = "DDL",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Deficit Deadlift"
                        },
                        new
                        {
                            Id = 133,
                            Abbreviation = "PSBH",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pistol squat bottom hold"
                        },
                        new
                        {
                            Id = 134,
                            Abbreviation = "Pegboard",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pegboard"
                        },
                        new
                        {
                            Id = 135,
                            Abbreviation = "Ring PshU",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ring Push-Up"
                        },
                        new
                        {
                            Id = 136,
                            Abbreviation = "Burpee D-ball over box",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Burpee D-ball over box"
                        },
                        new
                        {
                            Id = 137,
                            Abbreviation = "Hip extension hold (GHD)",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hip extension hold (GHD)"
                        },
                        new
                        {
                            Id = 138,
                            Abbreviation = "Glute bridge",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Glute bridge"
                        },
                        new
                        {
                            Id = 139,
                            Abbreviation = "Lat flys",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lat flys"
                        },
                        new
                        {
                            Id = 140,
                            Abbreviation = "C2B hold",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Chest to bar hold"
                        },
                        new
                        {
                            Id = 141,
                            Abbreviation = "COvB hold",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Chin over bar hold"
                        },
                        new
                        {
                            Id = 142,
                            Abbreviation = "Bottom up OHS",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bottom up overhead squat"
                        },
                        new
                        {
                            Id = 143,
                            Abbreviation = "Paused BS",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Paused Back Squat"
                        },
                        new
                        {
                            Id = 144,
                            Abbreviation = "Single leg step-up on box",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Single leg step-up on box"
                        },
                        new
                        {
                            Id = 145,
                            Abbreviation = "Jump to hollow",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Jump to hollow"
                        },
                        new
                        {
                            Id = 146,
                            Abbreviation = "Kipping PU",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Kipping pull-up"
                        },
                        new
                        {
                            Id = 147,
                            Abbreviation = "Butterfly PU",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Butterfly pull-up"
                        },
                        new
                        {
                            Id = 148,
                            Abbreviation = "Butterfly PU rhythm drill",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Butterfly pull-up rhythm drill"
                        },
                        new
                        {
                            Id = 149,
                            Abbreviation = "Glute ham raises",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Glute ham raises"
                        },
                        new
                        {
                            Id = 150,
                            Abbreviation = "Straight legs D-Ball clean",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Straight leg D-Ball clean"
                        },
                        new
                        {
                            Id = 151,
                            Abbreviation = "D-ball Squat",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "D-ball Squat"
                        },
                        new
                        {
                            Id = 152,
                            Abbreviation = "D-ball Front hold good morning",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "D-ball Front hold good morning"
                        },
                        new
                        {
                            Id = 153,
                            Abbreviation = "Straight legs sumo deadlift",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Straight leg sumo deadlift"
                        },
                        new
                        {
                            Id = 154,
                            Abbreviation = "Hip thrust",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hip thrust"
                        },
                        new
                        {
                            Id = 155,
                            Abbreviation = "Straight legs romanian deadlift",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Straight leg romanian deadlift"
                        },
                        new
                        {
                            Id = 156,
                            Abbreviation = "Jumping BS",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Jumping back squat"
                        },
                        new
                        {
                            Id = 157,
                            Abbreviation = "BTN Jerk",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Behind the Neck Jerk"
                        },
                        new
                        {
                            Id = 158,
                            Abbreviation = "TU",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Tuck Ups"
                        },
                        new
                        {
                            Id = 159,
                            Abbreviation = "BTN Split Jerk",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Behind the Neck Split Jerk"
                        },
                        new
                        {
                            Id = 160,
                            Abbreviation = "Single leg DL(2xDB)",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Single leg Deadlift(2xDB)"
                        },
                        new
                        {
                            Id = 161,
                            Abbreviation = "Bulgarian split squat(2xDB)",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bulgarian split squat(2xDB)"
                        },
                        new
                        {
                            Id = 162,
                            Abbreviation = "Banded hamstring curls",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Banded hamstring curls"
                        },
                        new
                        {
                            Id = 163,
                            Abbreviation = "Arch rock",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Arch rock"
                        },
                        new
                        {
                            Id = 164,
                            Abbreviation = "BTN Push press",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "BTN Push press"
                        },
                        new
                        {
                            Id = 165,
                            Abbreviation = "DB hang squat clean",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "DB hang squat clean"
                        },
                        new
                        {
                            Id = 166,
                            Abbreviation = "Burpee pull-up",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Burpee pull-up"
                        },
                        new
                        {
                            Id = 167,
                            Abbreviation = "Deficit push-up",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Deficit push-up"
                        },
                        new
                        {
                            Id = 168,
                            Abbreviation = "Sumo deadlift",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sumo deadlift"
                        },
                        new
                        {
                            Id = 169,
                            Abbreviation = "Single arm overhead walking (DB/KB)",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Single arm overhead walking (DB/KB)"
                        },
                        new
                        {
                            Id = 170,
                            Abbreviation = "GHD barbell back ext",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "GHD barbell back extension"
                        },
                        new
                        {
                            Id = 171,
                            Abbreviation = "Pegboard alt PU",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pegboard alt pull-up"
                        },
                        new
                        {
                            Id = 172,
                            Abbreviation = "Pegboard toes to peg",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pegboard toes to peg"
                        },
                        new
                        {
                            Id = 173,
                            Abbreviation = "Rope anchors",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rope anchors"
                        },
                        new
                        {
                            Id = 174,
                            Abbreviation = "Clapping push-ups",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Clapping push-ups"
                        },
                        new
                        {
                            Id = 175,
                            Abbreviation = "Barbell cuban rotation",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Barbell cuban rotation"
                        },
                        new
                        {
                            Id = 176,
                            Abbreviation = "German hang",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "German hang"
                        },
                        new
                        {
                            Id = 177,
                            Abbreviation = "Prowler push",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Prowler push"
                        },
                        new
                        {
                            Id = 178,
                            Abbreviation = "Power jerk",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Power jerk"
                        },
                        new
                        {
                            Id = 179,
                            Abbreviation = "Front rack lunge",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Front rack lunge"
                        },
                        new
                        {
                            Id = 180,
                            Abbreviation = "Skin the cat",
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Skin the cat"
                        });
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.ExerciseMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedUtc")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseMeasureTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseMeasure");

                    b.HasData(
                        new
                        {
                            Id = 311,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 130,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 312,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 130,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 313,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 130,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 314,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 131,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 315,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 131,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 316,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 131,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 317,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 132,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 318,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 132,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 319,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 132,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 320,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 133,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 321,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 133,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 322,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 134,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 323,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 134,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 324,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 134,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 325,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 135,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 326,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 135,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 327,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 135,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 328,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 136,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 329,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 136,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 330,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 136,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 331,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 137,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 332,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 137,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 333,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 138,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 334,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 138,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 335,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 138,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 336,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 139,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 337,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 140,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 338,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 140,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 339,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 141,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 340,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 141,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 341,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 142,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 342,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 142,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 343,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 142,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 344,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 38,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 345,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 114,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 346,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 46,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 347,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 47,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 348,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 143,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 349,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 143,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 350,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 143,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 351,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 143,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 352,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 144,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 353,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 144,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 354,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 144,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 355,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 145,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 356,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 146,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 357,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 147,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 358,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 148,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 359,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 149,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 360,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 149,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 361,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 149,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 362,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 150,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 363,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 150,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 364,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 150,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 365,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 151,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 366,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 151,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 367,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 151,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 368,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 152,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 369,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 152,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 370,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 152,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 371,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 153,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 372,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 153,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 373,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 153,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 374,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 154,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 375,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 154,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 376,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 154,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 377,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 155,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 378,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 155,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 379,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 155,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 380,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 156,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 381,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 156,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 382,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 156,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 383,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 157,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 384,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 157,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 385,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 157,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 386,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 158,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 387,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 159,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 388,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 159,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 389,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 159,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 390,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 160,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 391,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 160,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 392,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 160,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 393,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 161,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 394,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 161,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 395,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 161,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 396,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 162,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 397,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 162,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 398,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 162,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 399,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 163,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 400,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 164,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 401,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 164,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 402,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 164,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 403,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 165,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 404,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 165,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 405,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 165,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 406,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 166,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 407,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 167,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 408,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 168,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 409,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 168,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 410,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 168,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 411,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 169,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 412,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 169,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 413,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 169,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 414,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 170,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 415,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 170,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 416,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 170,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 417,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 171,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 418,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 172,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 419,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 173,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 420,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 174,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 421,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 175,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 422,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 176,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 423,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 176,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 424,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 177,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 425,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 177,
                            ExerciseMeasureTypeId = 11
                        },
                        new
                        {
                            Id = 426,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 177,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 427,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 177,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 428,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 178,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 429,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 178,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 430,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 178,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 431,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 179,
                            ExerciseMeasureTypeId = 2
                        },
                        new
                        {
                            Id = 432,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 179,
                            ExerciseMeasureTypeId = 3
                        },
                        new
                        {
                            Id = 433,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 179,
                            ExerciseMeasureTypeId = 8
                        },
                        new
                        {
                            Id = 434,
                            CreatedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExerciseId = 180,
                            ExerciseMeasureTypeId = 2
                        });
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.PlanningHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedUtc")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CrossfitterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsPrivatePlanning")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PlanningDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanningLevel")
                        .HasColumnType("int");

                    b.Property<int>("RoutineComplexId")
                        .HasColumnType("int");

                    b.Property<int>("WodSubType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CrossfitterId");

                    b.HasIndex("RoutineComplexId");

                    b.ToTable("PlanningHistory");
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.RoutineComplex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AsNonBreakingSet")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComplexType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedUtc")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("FindMaxWeight")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("RestBetweenExercises")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("RestBetweenRounds")
                        .HasColumnType("time");

                    b.Property<int?>("RoundCount")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TimeCap")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TimeToWork")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ParentId");

                    b.ToTable("RoutineComplex");
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.RoutineSimple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AlternativeWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Calories")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Centimeters")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Count")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedUtc")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<decimal?>("Distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlternative")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDoUnbroken")
                        .HasColumnType("bit");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("RoutineComplexId")
                        .HasColumnType("int");

                    b.Property<int?>("Seconds")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TimeToWork")
                        .HasColumnType("time");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WeightDisplayType")
                        .HasColumnType("int");

                    b.Property<double?>("WeightPercentValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("RoutineComplexId");

                    b.ToTable("RoutineSimple");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.CrossfitterWorkout", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.ApplicationUser", "Crossfitter")
                        .WithMany("CrossfitterWorkout")
                        .HasForeignKey("CrossfitterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrossfitDiaryCore.Model.RoutineComplex", "RoutineComplex")
                        .WithMany()
                        .HasForeignKey("RoutineComplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.ExerciseMeasure", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.Exercise", "Exercise")
                        .WithMany("ExerciseMeasures")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.PlanningHistory", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.ApplicationUser", "Crossfitter")
                        .WithMany("PlanningHistoryCollection")
                        .HasForeignKey("CrossfitterId");

                    b.HasOne("CrossfitDiaryCore.Model.RoutineComplex", "RoutineComplex")
                        .WithMany()
                        .HasForeignKey("RoutineComplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.RoutineComplex", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.ApplicationUser", "CreatedBy")
                        .WithMany("RoutineComplexCollection")
                        .HasForeignKey("CreatedById");

                    b.HasOne("CrossfitDiaryCore.Model.RoutineComplex", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("CrossfitDiaryCore.Model.RoutineSimple", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrossfitDiaryCore.Model.RoutineComplex", "RoutineComplex")
                        .WithMany("RoutineSimple")
                        .HasForeignKey("RoutineComplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrossfitDiaryCore.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CrossfitDiaryCore.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
