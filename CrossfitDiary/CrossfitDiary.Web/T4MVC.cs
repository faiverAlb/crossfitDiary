// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static CrossfitDiary.Web.Controllers.AccountController Account = new CrossfitDiary.Web.Controllers.T4MVC_AccountController();
    public static CrossfitDiary.Web.Controllers.CrossfitterController Crossfitter = new CrossfitDiary.Web.Controllers.T4MVC_CrossfitterController();
    public static CrossfitDiary.Web.Controllers.ErrorController Error = new CrossfitDiary.Web.Controllers.T4MVC_ErrorController();
    public static CrossfitDiary.Web.Controllers.HomeController Home = new CrossfitDiary.Web.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap_datepicker {
            public const string UrlPath = "~/Scripts/bootstrap-datepicker";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_datetimepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datetimepicker.min.js") ? Url("bootstrap-datetimepicker.min.js") : Url("bootstrap-datetimepicker.js");
            public static readonly string bootstrap_datetimepicker_min_js = Url("bootstrap-datetimepicker.min.js");
            public static readonly string moment_with_locales_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment-with-locales.min.js") ? Url("moment-with-locales.min.js") : Url("moment-with-locales.js");
            public static readonly string moment_with_locales_min_js = Url("moment-with-locales.min.js");
            public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
            public static readonly string moment_min_js = Url("moment.min.js");
        }
    
        public static readonly string bootstrap_datetimepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datetimepicker.min.js") ? Url("bootstrap-datetimepicker.min.js") : Url("bootstrap-datetimepicker.js");
        public static readonly string bootstrap_datetimepicker_min_js = Url("bootstrap-datetimepicker.min.js");
        public static readonly string bootstrap_bundle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.bundle.min.js") ? Url("bootstrap.bundle.min.js") : Url("bootstrap.bundle.js");
        public static readonly string bootstrap_bundle_js_map = Url("bootstrap.bundle.js.map");
        public static readonly string bootstrap_bundle_min_js = Url("bootstrap.bundle.min.js");
        public static readonly string bootstrap_bundle_min_js_map = Url("bootstrap.bundle.min.js.map");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_js_map = Url("bootstrap.js.map");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string bootstrap_min_js_map = Url("bootstrap.min.js.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class esm {
            public const string UrlPath = "~/Scripts/esm";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class font_awesome {
            public const string UrlPath = "~/Scripts/font-awesome";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string fontawesome_all_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fontawesome-all.min.js") ? Url("fontawesome-all.min.js") : Url("fontawesome-all.js");
            public static readonly string fontawesome_all_min_js = Url("fontawesome-all.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class gijgo {
            public const string UrlPath = "~/Scripts/gijgo";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class combined {
                public const string UrlPath = "~/Scripts/gijgo/combined";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string gijgo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gijgo.min.js") ? Url("gijgo.min.js") : Url("gijgo.js");
                public static readonly string gijgo_min_js = Url("gijgo.min.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class messages {
                    public const string UrlPath = "~/Scripts/gijgo/combined/messages";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string messages_bg_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/messages.bg-bg.min.js") ? Url("messages.bg-bg.min.js") : Url("messages.bg-bg.js");
                    public static readonly string messages_bg_bg_min_js = Url("messages.bg-bg.min.js");
                    public static readonly string messages_de_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/messages.de-de.min.js") ? Url("messages.de-de.min.js") : Url("messages.de-de.js");
                    public static readonly string messages_de_de_min_js = Url("messages.de-de.min.js");
                    public static readonly string messages_es_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/messages.es-es.min.js") ? Url("messages.es-es.min.js") : Url("messages.es-es.js");
                    public static readonly string messages_es_es_min_js = Url("messages.es-es.min.js");
                    public static readonly string messages_fr_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/messages.fr-fr.min.js") ? Url("messages.fr-fr.min.js") : Url("messages.fr-fr.js");
                    public static readonly string messages_fr_fr_min_js = Url("messages.fr-fr.min.js");
                    public static readonly string messages_it_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/messages.it-it.min.js") ? Url("messages.it-it.min.js") : Url("messages.it-it.js");
                    public static readonly string messages_it_it_min_js = Url("messages.it-it.min.js");
                    public static readonly string messages_pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/messages.pt-br.min.js") ? Url("messages.pt-br.min.js") : Url("messages.pt-br.js");
                    public static readonly string messages_pt_br_min_js = Url("messages.pt-br.min.js");
                    public static readonly string messages_ru_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/messages.ru-ru.min.js") ? Url("messages.ru-ru.min.js") : Url("messages.ru-ru.js");
                    public static readonly string messages_ru_ru_min_js = Url("messages.ru-ru.min.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modular {
                public const string UrlPath = "~/Scripts/gijgo/modular";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string checkbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/checkbox.min.js") ? Url("checkbox.min.js") : Url("checkbox.js");
                public static readonly string checkbox_min_js = Url("checkbox.min.js");
                public static readonly string core_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/core.min.js") ? Url("core.min.js") : Url("core.js");
                public static readonly string core_min_js = Url("core.min.js");
                public static readonly string datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datepicker.min.js") ? Url("datepicker.min.js") : Url("datepicker.js");
                public static readonly string datepicker_min_js = Url("datepicker.min.js");
                public static readonly string datetimepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datetimepicker.min.js") ? Url("datetimepicker.min.js") : Url("datetimepicker.js");
                public static readonly string datetimepicker_min_js = Url("datetimepicker.min.js");
                public static readonly string dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dialog.min.js") ? Url("dialog.min.js") : Url("dialog.js");
                public static readonly string dialog_min_js = Url("dialog.min.js");
                public static readonly string draggable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/draggable.min.js") ? Url("draggable.min.js") : Url("draggable.js");
                public static readonly string draggable_min_js = Url("draggable.min.js");
                public static readonly string dropdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dropdown.min.js") ? Url("dropdown.min.js") : Url("dropdown.js");
                public static readonly string dropdown_min_js = Url("dropdown.min.js");
                public static readonly string droppable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/droppable.min.js") ? Url("droppable.min.js") : Url("droppable.js");
                public static readonly string droppable_min_js = Url("droppable.min.js");
                public static readonly string editor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/editor.min.js") ? Url("editor.min.js") : Url("editor.js");
                public static readonly string editor_min_js = Url("editor.min.js");
                public static readonly string grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/grid.min.js") ? Url("grid.min.js") : Url("grid.js");
                public static readonly string grid_min_js = Url("grid.min.js");
                public static readonly string slider_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/slider.min.js") ? Url("slider.min.js") : Url("slider.js");
                public static readonly string slider_min_js = Url("slider.min.js");
                public static readonly string timepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/timepicker.min.js") ? Url("timepicker.min.js") : Url("timepicker.js");
                public static readonly string timepicker_min_js = Url("timepicker.min.js");
                public static readonly string tree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tree.min.js") ? Url("tree.min.js") : Url("tree.js");
                public static readonly string tree_min_js = Url("tree.min.js");
            }
        
        }
    
        public static readonly string index_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/index.d.min.js") ? Url("index.d.min.js") : Url("index.d.js");
        public static readonly string jquery_3_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.intellisense.min.js") ? Url("jquery-3.1.1.intellisense.min.js") : Url("jquery-3.1.1.intellisense.js");
        public static readonly string jquery_3_3_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.intellisense.min.js") ? Url("jquery-3.3.1.intellisense.min.js") : Url("jquery-3.3.1.intellisense.js");
        public static readonly string jquery_3_3_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.min.js") ? Url("jquery-3.3.1.min.js") : Url("jquery-3.3.1.js");
        public static readonly string jquery_3_3_1_min_js = Url("jquery-3.3.1.min.js");
        public static readonly string jquery_3_3_1_min_map = Url("jquery-3.3.1.min.map");
        public static readonly string jquery_3_3_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.slim.min.js") ? Url("jquery-3.3.1.slim.min.js") : Url("jquery-3.3.1.slim.js");
        public static readonly string jquery_3_3_1_slim_min_js = Url("jquery-3.3.1.slim.min.js");
        public static readonly string jquery_3_3_1_slim_min_map = Url("jquery-3.3.1.slim.min.map");
        public static readonly string jquery_ui_1_12_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui-1.12.1.min.js") ? Url("jquery-ui-1.12.1.min.js") : Url("jquery-ui-1.12.1.js");
        public static readonly string jquery_ui_1_12_1_min_js = Url("jquery-ui-1.12.1.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jqueryPlugins {
            public const string UrlPath = "~/Scripts/jqueryPlugins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_inputmask_bundle_min_js = Url("jquery.inputmask.bundle.min.js");
        }
    
        public static readonly string knockout_3_4_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/knockout-3.4.0.min.js") ? Url("knockout-3.4.0.min.js") : Url("knockout-3.4.0.js");
        public static readonly string knockout_validation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/knockout.validation.min.js") ? Url("knockout.validation.min.js") : Url("knockout.validation.js");
        public static readonly string knockout_validation_min_js = Url("knockout.validation.min.js");
        public static readonly string ko_bindingHandlers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ko.bindingHandlers.min.js") ? Url("ko.bindingHandlers.min.js") : Url("ko.bindingHandlers.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string moment_with_locales_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment-with-locales.min.js") ? Url("moment-with-locales.min.js") : Url("moment-with-locales.js");
        public static readonly string moment_with_locales_min_js = Url("moment-with-locales.min.js");
        public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
        public static readonly string moment_min_js = Url("moment.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Pages {
            public const string UrlPath = "~/Scripts/Pages";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Crossfitter {
                public const string UrlPath = "~/Scripts/Pages/Crossfitter";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ManageWorkout {
                    public const string UrlPath = "~/Scripts/Pages/Crossfitter/ManageWorkout";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string CreateWorkoutController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/CreateWorkoutController.min.js") ? Url("CreateWorkoutController.min.js") : Url("CreateWorkoutController.js");
                    public static readonly string LogWorkoutController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/LogWorkoutController.min.js") ? Url("LogWorkoutController.min.js") : Url("LogWorkoutController.js");
                    public static readonly string ManageWorkoutController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ManageWorkoutController.min.js") ? Url("ManageWorkoutController.min.js") : Url("ManageWorkoutController.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Pride {
                    public const string UrlPath = "~/Scripts/Pages/Crossfitter/Pride";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string PrideController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PrideController.min.js") ? Url("PrideController.min.js") : Url("PrideController.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class General {
                public const string UrlPath = "~/Scripts/Pages/General";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string BaseController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/BaseController.min.js") ? Url("BaseController.min.js") : Url("BaseController.js");
                public static readonly string BaseKeyValuePairModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/BaseKeyValuePairModel.min.js") ? Url("BaseKeyValuePairModel.min.js") : Url("BaseKeyValuePairModel.js");
                public static readonly string BaseService_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/BaseService.min.js") ? Url("BaseService.min.js") : Url("BaseService.js");
                public static readonly string BasicParameters_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/BasicParameters.min.js") ? Url("BasicParameters.min.js") : Url("BasicParameters.js");
                public static readonly string CrossfitterService_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/CrossfitterService.min.js") ? Url("CrossfitterService.min.js") : Url("CrossfitterService.js");
                public static readonly string ErrorMessageViewModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ErrorMessageViewModel.min.js") ? Url("ErrorMessageViewModel.min.js") : Url("ErrorMessageViewModel.js");
                public static readonly string FilterableViewModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/FilterableViewModel.min.js") ? Url("FilterableViewModel.min.js") : Url("FilterableViewModel.js");
                public static readonly string KnockoutUtils_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/KnockoutUtils.min.js") ? Url("KnockoutUtils.min.js") : Url("KnockoutUtils.js");
                public static readonly string ServerProcessedViewModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ServerProcessedViewModel.min.js") ? Url("ServerProcessedViewModel.min.js") : Url("ServerProcessedViewModel.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Home {
                public const string UrlPath = "~/Scripts/Pages/Home";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string HomePageController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/HomePageController.min.js") ? Url("HomePageController.min.js") : Url("HomePageController.js");
                public static readonly string TemplateNames_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/TemplateNames.min.js") ? Url("TemplateNames.min.js") : Url("TemplateNames.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                public const string UrlPath = "~/Scripts/Pages/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string ExerciseMeasureType_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ExerciseMeasureType.min.js") ? Url("ExerciseMeasureType.min.js") : Url("ExerciseMeasureType.js");
                public static readonly string ExerciseMeasureTypeViewModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ExerciseMeasureTypeViewModel.min.js") ? Url("ExerciseMeasureTypeViewModel.min.js") : Url("ExerciseMeasureTypeViewModel.js");
                public static readonly string ExerciseViewModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ExerciseViewModel.min.js") ? Url("ExerciseViewModel.min.js") : Url("ExerciseViewModel.js");
                public static readonly string PersonExerciseRecord_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PersonExerciseRecord.min.js") ? Url("PersonExerciseRecord.min.js") : Url("PersonExerciseRecord.js");
                public static readonly string SimpleRoutine_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/SimpleRoutine.min.js") ? Url("SimpleRoutine.min.js") : Url("SimpleRoutine.js");
                public static readonly string ToLogWorkoutViewModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ToLogWorkoutViewModel.min.js") ? Url("ToLogWorkoutViewModel.min.js") : Url("ToLogWorkoutViewModel.js");
                public static readonly string WorkoutType_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/WorkoutType.min.js") ? Url("WorkoutType.min.js") : Url("WorkoutType.js");
                public static readonly string WorkoutViewModel_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/WorkoutViewModel.min.js") ? Url("WorkoutViewModel.min.js") : Url("WorkoutViewModel.js");
            }
        
        }
    
        public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
        public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
        public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
        public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
        public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
        public static readonly string popper_js_map = Url("popper.js.map");
        public static readonly string popper_min_js = Url("popper.min.js");
        public static readonly string popper_min_js_map = Url("popper.min.js.map");
        public static readonly string q_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/q.min.js") ? Url("q.min.js") : Url("q.js");
        public static readonly string q_min_js = Url("q.min.js");
        public static readonly string README_md = Url("README.md");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class typings {
            public const string UrlPath = "~/Scripts/typings";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery {
                public const string UrlPath = "~/Scripts/typings/jquery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string jquery_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.d.min.js") ? Url("jquery.d.min.js") : Url("jquery.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class knockout {
                public const string UrlPath = "~/Scripts/typings/knockout";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string knockout_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/knockout.d.min.js") ? Url("knockout.d.min.js") : Url("knockout.d.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tests {
                    public const string UrlPath = "~/Scripts/typings/knockout/tests";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string jasmine_extensions_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jasmine.extensions.d.min.js") ? Url("jasmine.extensions.d.min.js") : Url("jasmine.extensions.d.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class q {
                public const string UrlPath = "~/Scripts/typings/q";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string Q_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Q.d.min.js") ? Url("Q.d.min.js") : Url("Q.d.js");
                public static readonly string q_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/q.min.js") ? Url("q.min.js") : Url("q.js");
                public static readonly string q_min_js = Url("q.min.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class umd {
            public const string UrlPath = "~/Scripts/umd";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string _bootstrap_datetimepicker_scss = Url("_bootstrap-datetimepicker.scss");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            public const string UrlPath = "~/Content/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string _alert_scss = Url("_alert.scss");
            public static readonly string _badge_scss = Url("_badge.scss");
            public static readonly string _breadcrumb_scss = Url("_breadcrumb.scss");
            public static readonly string _button_group_scss = Url("_button-group.scss");
            public static readonly string _buttons_scss = Url("_buttons.scss");
            public static readonly string _card_scss = Url("_card.scss");
            public static readonly string _carousel_scss = Url("_carousel.scss");
            public static readonly string _close_scss = Url("_close.scss");
            public static readonly string _code_scss = Url("_code.scss");
            public static readonly string _custom_forms_scss = Url("_custom-forms.scss");
            public static readonly string _dropdown_scss = Url("_dropdown.scss");
            public static readonly string _forms_scss = Url("_forms.scss");
            public static readonly string _functions_scss = Url("_functions.scss");
            public static readonly string _grid_scss = Url("_grid.scss");
            public static readonly string _images_scss = Url("_images.scss");
            public static readonly string _input_group_scss = Url("_input-group.scss");
            public static readonly string _jumbotron_scss = Url("_jumbotron.scss");
            public static readonly string _list_group_scss = Url("_list-group.scss");
            public static readonly string _media_scss = Url("_media.scss");
            public static readonly string _mixins_scss = Url("_mixins.scss");
            public static readonly string _modal_scss = Url("_modal.scss");
            public static readonly string _nav_scss = Url("_nav.scss");
            public static readonly string _navbar_scss = Url("_navbar.scss");
            public static readonly string _pagination_scss = Url("_pagination.scss");
            public static readonly string _popover_scss = Url("_popover.scss");
            public static readonly string _print_scss = Url("_print.scss");
            public static readonly string _progress_scss = Url("_progress.scss");
            public static readonly string _reboot_scss = Url("_reboot.scss");
            public static readonly string _root_scss = Url("_root.scss");
            public static readonly string _tables_scss = Url("_tables.scss");
            public static readonly string _tooltip_scss = Url("_tooltip.scss");
            public static readonly string _transitions_scss = Url("_transitions.scss");
            public static readonly string _type_scss = Url("_type.scss");
            public static readonly string _utilities_scss = Url("_utilities.scss");
            public static readonly string _variables_scss = Url("_variables.scss");
            public static readonly string bootstrap_grid_scss = Url("bootstrap-grid.scss");
            public static readonly string bootstrap_reboot_scss = Url("bootstrap-reboot.scss");
            public static readonly string bootstrap_scss = Url("bootstrap.scss");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class mixins {
                public const string UrlPath = "~/Content/bootstrap/mixins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _alert_scss = Url("_alert.scss");
                public static readonly string _background_variant_scss = Url("_background-variant.scss");
                public static readonly string _badge_scss = Url("_badge.scss");
                public static readonly string _border_radius_scss = Url("_border-radius.scss");
                public static readonly string _box_shadow_scss = Url("_box-shadow.scss");
                public static readonly string _breakpoints_scss = Url("_breakpoints.scss");
                public static readonly string _buttons_scss = Url("_buttons.scss");
                public static readonly string _caret_scss = Url("_caret.scss");
                public static readonly string _clearfix_scss = Url("_clearfix.scss");
                public static readonly string _float_scss = Url("_float.scss");
                public static readonly string _forms_scss = Url("_forms.scss");
                public static readonly string _gradients_scss = Url("_gradients.scss");
                public static readonly string _grid_framework_scss = Url("_grid-framework.scss");
                public static readonly string _grid_scss = Url("_grid.scss");
                public static readonly string _hover_scss = Url("_hover.scss");
                public static readonly string _image_scss = Url("_image.scss");
                public static readonly string _list_group_scss = Url("_list-group.scss");
                public static readonly string _lists_scss = Url("_lists.scss");
                public static readonly string _nav_divider_scss = Url("_nav-divider.scss");
                public static readonly string _navbar_align_scss = Url("_navbar-align.scss");
                public static readonly string _pagination_scss = Url("_pagination.scss");
                public static readonly string _reset_text_scss = Url("_reset-text.scss");
                public static readonly string _resize_scss = Url("_resize.scss");
                public static readonly string _screen_reader_scss = Url("_screen-reader.scss");
                public static readonly string _size_scss = Url("_size.scss");
                public static readonly string _table_row_scss = Url("_table-row.scss");
                public static readonly string _text_emphasis_scss = Url("_text-emphasis.scss");
                public static readonly string _text_hide_scss = Url("_text-hide.scss");
                public static readonly string _text_truncate_scss = Url("_text-truncate.scss");
                public static readonly string _transition_scss = Url("_transition.scss");
                public static readonly string _visibility_scss = Url("_visibility.scss");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class utilities {
                public const string UrlPath = "~/Content/bootstrap/utilities";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _align_scss = Url("_align.scss");
                public static readonly string _background_scss = Url("_background.scss");
                public static readonly string _borders_scss = Url("_borders.scss");
                public static readonly string _clearfix_scss = Url("_clearfix.scss");
                public static readonly string _display_scss = Url("_display.scss");
                public static readonly string _embed_scss = Url("_embed.scss");
                public static readonly string _flex_scss = Url("_flex.scss");
                public static readonly string _float_scss = Url("_float.scss");
                public static readonly string _position_scss = Url("_position.scss");
                public static readonly string _screenreaders_scss = Url("_screenreaders.scss");
                public static readonly string _sizing_scss = Url("_sizing.scss");
                public static readonly string _spacing_scss = Url("_spacing.scss");
                public static readonly string _text_scss = Url("_text.scss");
                public static readonly string _visibility_scss = Url("_visibility.scss");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap_datepicker {
            public const string UrlPath = "~/Content/bootstrap-datepicker";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.min.css") ? Url("bootstrap-datepicker.min.css") : Url("bootstrap-datepicker.css");
        }
    
        public static readonly string bootstrap_datetimepicker_build_scss = Url("bootstrap-datetimepicker-build.scss");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap_select {
            public const string UrlPath = "~/Content/bootstrap-select";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_select_scss = Url("bootstrap-select.scss");
            public static readonly string variables_scss = Url("variables.scss");
        }
    
        public static readonly string bootstrap_scss = Url("bootstrap.scss");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string custom_variables_scss = Url("custom-variables.scss");
        public static readonly string favicon_ico = Url("favicon.ico");
        public static readonly string favicon_png = Url("favicon.png");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fontawesome {
            public const string UrlPath = "~/Content/fontawesome";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class scss {
                public const string UrlPath = "~/Content/fontawesome/scss";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _animated_scss = Url("_animated.scss");
                public static readonly string _bordered_pulled_scss = Url("_bordered-pulled.scss");
                public static readonly string _core_scss = Url("_core.scss");
                public static readonly string _fixed_width_scss = Url("_fixed-width.scss");
                public static readonly string _icons_scss = Url("_icons.scss");
                public static readonly string _larger_scss = Url("_larger.scss");
                public static readonly string _list_scss = Url("_list.scss");
                public static readonly string _mixins_scss = Url("_mixins.scss");
                public static readonly string _rotated_flipped_scss = Url("_rotated-flipped.scss");
                public static readonly string _screen_reader_scss = Url("_screen-reader.scss");
                public static readonly string _stacked_scss = Url("_stacked.scss");
                public static readonly string _variables_scss = Url("_variables.scss");
                public static readonly string fa_brands_scss = Url("fa-brands.scss");
                public static readonly string fa_regular_scss = Url("fa-regular.scss");
                public static readonly string fa_solid_scss = Url("fa-solid.scss");
                public static readonly string fontawesome_scss = Url("fontawesome.scss");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class webfonts {
                public const string UrlPath = "~/Content/fontawesome/webfonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string fa_brands_400_eot = Url("fa-brands-400.eot");
                public static readonly string fa_brands_400_svg = Url("fa-brands-400.svg");
                public static readonly string fa_brands_400_ttf = Url("fa-brands-400.ttf");
                public static readonly string fa_brands_400_woff = Url("fa-brands-400.woff");
                public static readonly string fa_brands_400_woff2 = Url("fa-brands-400.woff2");
                public static readonly string fa_regular_400_eot = Url("fa-regular-400.eot");
                public static readonly string fa_regular_400_svg = Url("fa-regular-400.svg");
                public static readonly string fa_regular_400_ttf = Url("fa-regular-400.ttf");
                public static readonly string fa_regular_400_woff = Url("fa-regular-400.woff");
                public static readonly string fa_regular_400_woff2 = Url("fa-regular-400.woff2");
                public static readonly string fa_solid_900_eot = Url("fa-solid-900.eot");
                public static readonly string fa_solid_900_svg = Url("fa-solid-900.svg");
                public static readonly string fa_solid_900_ttf = Url("fa-solid-900.ttf");
                public static readonly string fa_solid_900_woff = Url("fa-solid-900.woff");
                public static readonly string fa_solid_900_woff2 = Url("fa-solid-900.woff2");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            public const string UrlPath = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class General {
            public const string UrlPath = "~/Content/General";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string general_scss = Url("general.scss");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class gijgo {
            public const string UrlPath = "~/Content/gijgo";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class combined {
                public const string UrlPath = "~/Content/gijgo/combined";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string demo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/demo.min.css") ? Url("demo.min.css") : Url("demo.css");
                public static readonly string demo_min_css = Url("demo.min.css");
                public static readonly string gijgo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gijgo.min.css") ? Url("gijgo.min.css") : Url("gijgo.css");
                public static readonly string gijgo_min_css = Url("gijgo.min.css");
                public static readonly string gijgo_style_scss = Url("gijgo_style.scss");
                public static readonly string gijgo_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/gijgo_style.min.css") ? Url("gijgo_style.min.css") : Url("gijgo_style.css");
                public static readonly string gijgo_style_min_css = Url("gijgo_style.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                public const string UrlPath = "~/Content/gijgo/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string gijgo_material_eot = Url("gijgo-material.eot");
                public static readonly string gijgo_material_svg = Url("gijgo-material.svg");
                public static readonly string gijgo_material_ttf = Url("gijgo-material.ttf");
                public static readonly string gijgo_material_woff = Url("gijgo-material.woff");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modular {
                public const string UrlPath = "~/Content/gijgo/modular";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string checkbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/checkbox.min.css") ? Url("checkbox.min.css") : Url("checkbox.css");
                public static readonly string checkbox_min_css = Url("checkbox.min.css");
                public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/core.min.css") ? Url("core.min.css") : Url("core.css");
                public static readonly string core_min_css = Url("core.min.css");
                public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
                public static readonly string datepicker_min_css = Url("datepicker.min.css");
                public static readonly string datetimepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datetimepicker.min.css") ? Url("datetimepicker.min.css") : Url("datetimepicker.css");
                public static readonly string datetimepicker_min_css = Url("datetimepicker.min.css");
                public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                public static readonly string dialog_min_css = Url("dialog.min.css");
                public static readonly string dropdown_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dropdown.min.css") ? Url("dropdown.min.css") : Url("dropdown.css");
                public static readonly string dropdown_min_css = Url("dropdown.min.css");
                public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                public static readonly string editor_min_css = Url("editor.min.css");
                public static readonly string grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/grid.min.css") ? Url("grid.min.css") : Url("grid.css");
                public static readonly string grid_min_css = Url("grid.min.css");
                public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                public static readonly string slider_min_css = Url("slider.min.css");
                public static readonly string timepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/timepicker.min.css") ? Url("timepicker.min.css") : Url("timepicker.css");
                public static readonly string timepicker_min_css = Url("timepicker.min.css");
                public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                public static readonly string tree_min_css = Url("tree.min.css");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class img {
            public const string UrlPath = "~/Content/img";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string curly_bracket_svg = Url("curly-bracket.svg");
            public static readonly string error_jpg = Url("error.jpg");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class pages {
            public const string UrlPath = "~/Content/pages";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string home_scss = Url("home.scss");
            public static readonly string home_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/home.min.css") ? Url("home.min.css") : Url("home.css");
            public static readonly string home_min_css = Url("home.min.css");
            public static readonly string login_page_scss = Url("login-page.scss");
            public static readonly string login_page_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/login-page.min.css") ? Url("login-page.min.css") : Url("login-page.css");
            public static readonly string login_page_min_css = Url("login-page.min.css");
            public static readonly string manage_workout_scss = Url("manage-workout.scss");
            public static readonly string manage_workout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/manage-workout.min.css") ? Url("manage-workout.min.css") : Url("manage-workout.css");
            public static readonly string manage_workout_min_css = Url("manage-workout.min.css");
            public static readonly string pride_scss = Url("pride.scss");
            public static readonly string pride_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/pride.min.css") ? Url("pride.min.css") : Url("pride.css");
            public static readonly string pride_min_css = Url("pride.min.css");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class bootstrap_datepicker 
            {
                public static class Assets
                {
                    public static readonly string bootstrap_datetimepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker/bootstrap-datetimepicker.js"); 
                    public static readonly string bootstrap_datetimepicker_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker/bootstrap-datetimepicker.min.js"); 
                    public static readonly string moment_with_locales_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker/moment-with-locales.js"); 
                    public static readonly string moment_with_locales_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker/moment-with-locales.min.js"); 
                    public static readonly string moment_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker/moment.js"); 
                    public static readonly string moment_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker/moment.min.js"); 
                }
            }
            public static partial class esm 
            {
                public static class Assets
                {
                    public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper-utils.js"); 
                    public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper-utils.min.js"); 
                    public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper.js"); 
                    public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper.min.js"); 
                }
            }
            public static partial class font_awesome 
            {
                public static class Assets
                {
                    public static readonly string fontawesome_all_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/font-awesome/fontawesome-all.js"); 
                    public static readonly string fontawesome_all_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/font-awesome/fontawesome-all.min.js"); 
                }
            }
            public static partial class gijgo 
            {
                public static partial class combined 
                {
                    public static partial class messages 
                    {
                        public static class Assets
                        {
                            public static readonly string messages_bg_bg_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.bg-bg.js"); 
                            public static readonly string messages_bg_bg_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.bg-bg.min.js"); 
                            public static readonly string messages_de_de_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.de-de.js"); 
                            public static readonly string messages_de_de_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.de-de.min.js"); 
                            public static readonly string messages_es_es_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.es-es.js"); 
                            public static readonly string messages_es_es_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.es-es.min.js"); 
                            public static readonly string messages_fr_fr_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.fr-fr.js"); 
                            public static readonly string messages_fr_fr_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.fr-fr.min.js"); 
                            public static readonly string messages_it_it_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.it-it.js"); 
                            public static readonly string messages_it_it_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.it-it.min.js"); 
                            public static readonly string messages_pt_br_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.pt-br.js"); 
                            public static readonly string messages_pt_br_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.pt-br.min.js"); 
                            public static readonly string messages_ru_ru_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.ru-ru.js"); 
                            public static readonly string messages_ru_ru_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/messages/messages.ru-ru.min.js"); 
                        }
                    }
                    public static class Assets
                    {
                        public static readonly string gijgo_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/gijgo.js"); 
                        public static readonly string gijgo_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/combined/gijgo.min.js"); 
                    }
                }
                public static partial class modular 
                {
                    public static class Assets
                    {
                        public static readonly string checkbox_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/checkbox.js"); 
                        public static readonly string checkbox_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/checkbox.min.js"); 
                        public static readonly string core_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/core.js"); 
                        public static readonly string core_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/core.min.js"); 
                        public static readonly string datepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/datepicker.js"); 
                        public static readonly string datepicker_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/datepicker.min.js"); 
                        public static readonly string datetimepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/datetimepicker.js"); 
                        public static readonly string datetimepicker_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/datetimepicker.min.js"); 
                        public static readonly string dialog_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/dialog.js"); 
                        public static readonly string dialog_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/dialog.min.js"); 
                        public static readonly string draggable_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/draggable.js"); 
                        public static readonly string draggable_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/draggable.min.js"); 
                        public static readonly string dropdown_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/dropdown.js"); 
                        public static readonly string dropdown_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/dropdown.min.js"); 
                        public static readonly string droppable_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/droppable.js"); 
                        public static readonly string droppable_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/droppable.min.js"); 
                        public static readonly string editor_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/editor.js"); 
                        public static readonly string editor_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/editor.min.js"); 
                        public static readonly string grid_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/grid.js"); 
                        public static readonly string grid_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/grid.min.js"); 
                        public static readonly string slider_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/slider.js"); 
                        public static readonly string slider_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/slider.min.js"); 
                        public static readonly string timepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/timepicker.js"); 
                        public static readonly string timepicker_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/timepicker.min.js"); 
                        public static readonly string tree_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/tree.js"); 
                        public static readonly string tree_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/gijgo/modular/tree.min.js"); 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class jqueryPlugins 
            {
                public static class Assets
                {
                    public static readonly string jquery_inputmask_bundle_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jqueryPlugins/jquery.inputmask.bundle.min.js"); 
                }
            }
            public static partial class Pages 
            {
                public static partial class Crossfitter 
                {
                    public static partial class ManageWorkout 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Pride 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class General 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Home 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Models 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class typings 
            {
                public static partial class jquery 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class knockout 
                {
                    public static partial class tests 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class q 
                {
                    public static class Assets
                    {
                        public static readonly string q_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/typings/q/q.js"); 
                        public static readonly string q_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/typings/q/q.min.js"); 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class umd 
            {
                public static class Assets
                {
                    public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper-utils.js"); 
                    public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper-utils.min.js"); 
                    public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper.js"); 
                    public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper.min.js"); 
                }
            }
            public static class Assets
            {
                public static readonly string _references_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/_references.js"); 
                public static readonly string bootstrap_datetimepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datetimepicker.js"); 
                public static readonly string bootstrap_datetimepicker_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datetimepicker.min.js"); 
                public static readonly string bootstrap_bundle_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.bundle.js"); 
                public static readonly string bootstrap_bundle_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.bundle.min.js"); 
                public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.js"); 
                public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.min.js"); 
                public static readonly string jquery_3_1_1_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.1.1.intellisense.js"); 
                public static readonly string jquery_3_3_1_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.intellisense.js"); 
                public static readonly string jquery_3_3_1_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.js"); 
                public static readonly string jquery_3_3_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.min.js"); 
                public static readonly string jquery_3_3_1_slim_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.slim.js"); 
                public static readonly string jquery_3_3_1_slim_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.slim.min.js"); 
                public static readonly string jquery_ui_1_12_1_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-ui-1.12.1.js"); 
                public static readonly string jquery_ui_1_12_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-ui-1.12.1.min.js"); 
                public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.unobtrusive-ajax.js"); 
                public static readonly string jquery_unobtrusive_ajax_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.unobtrusive-ajax.min.js"); 
                public static readonly string jquery_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.js"); 
                public static readonly string jquery_validate_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.min.js"); 
                public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.js"); 
                public static readonly string jquery_validate_unobtrusive_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.min.js"); 
                public static readonly string knockout_3_4_0_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/knockout-3.4.0.js"); 
                public static readonly string knockout_validation_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/knockout.validation.js"); 
                public static readonly string knockout_validation_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/knockout.validation.min.js"); 
                public static readonly string ko_bindingHandlers_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/ko.bindingHandlers.js"); 
                public static readonly string modernizr_2_8_3_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/modernizr-2.8.3.js"); 
                public static readonly string moment_with_locales_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/moment-with-locales.js"); 
                public static readonly string moment_with_locales_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/moment-with-locales.min.js"); 
                public static readonly string moment_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/moment.js"); 
                public static readonly string moment_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/moment.min.js"); 
                public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper-utils.js"); 
                public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper-utils.min.js"); 
                public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper.js"); 
                public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper.min.js"); 
                public static readonly string q_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/q.js"); 
                public static readonly string q_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/q.min.js"); 
            }
        }
        public static partial class Content 
        {
            public static partial class bootstrap 
            {
                public static partial class mixins 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class utilities 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class bootstrap_datepicker 
            {
                public static class Assets
                {
                    public static readonly string bootstrap_datepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-datepicker/bootstrap-datepicker.css");
                }
            }
            public static partial class bootstrap_select 
            {
                public static class Assets
                {
                }
            }
            public static partial class fontawesome 
            {
                public static partial class scss 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class webfonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class General 
            {
                public static class Assets
                {
                }
            }
            public static partial class gijgo 
            {
                public static partial class combined 
                {
                    public static class Assets
                    {
                        public static readonly string demo_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/combined/demo.css");
                        public static readonly string demo_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/combined/demo.min.css");
                        public static readonly string gijgo_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/combined/gijgo.css");
                        public static readonly string gijgo_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/combined/gijgo.min.css");
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class modular 
                {
                    public static class Assets
                    {
                        public static readonly string checkbox_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/checkbox.css");
                        public static readonly string checkbox_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/checkbox.min.css");
                        public static readonly string core_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/core.css");
                        public static readonly string core_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/core.min.css");
                        public static readonly string datepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/datepicker.css");
                        public static readonly string datepicker_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/datepicker.min.css");
                        public static readonly string datetimepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/datetimepicker.css");
                        public static readonly string datetimepicker_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/datetimepicker.min.css");
                        public static readonly string dialog_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/dialog.css");
                        public static readonly string dialog_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/dialog.min.css");
                        public static readonly string dropdown_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/dropdown.css");
                        public static readonly string dropdown_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/dropdown.min.css");
                        public static readonly string editor_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/editor.css");
                        public static readonly string editor_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/editor.min.css");
                        public static readonly string grid_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/grid.css");
                        public static readonly string grid_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/grid.min.css");
                        public static readonly string slider_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/slider.css");
                        public static readonly string slider_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/slider.min.css");
                        public static readonly string timepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/timepicker.css");
                        public static readonly string timepicker_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/timepicker.min.css");
                        public static readonly string tree_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/tree.css");
                        public static readonly string tree_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/gijgo/modular/tree.min.css");
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class img 
            {
                public static class Assets
                {
                }
            }
            public static partial class pages 
            {
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


