@{
    Layout = "../Shared/_Layout.cshtml";
    string predefinedUserId = string.IsNullOrEmpty(ViewBag.UserId)? "" : ViewBag.UserId;
    string exerciseId = ViewBag.ExerciseId == null ? "": ViewBag.ExerciseId.ToString();
    bool isResetButtonVisible = predefinedUserId != "" || exerciseId != "";
}
@using CrossfitDiary.Model
@using CrossfitDiary.Web.ViewModels
@using CrossfitDiary.Web.ViewModels.Pride
@using Links
@using Newtonsoft.Json
@using Scripts = System.Web.Optimization.Scripts
@model PersonDataViewModel

<div class="home-container" data-bind="visible:true" style="display: none">
    <!--ko if:errorMessager.hasMessage -->
    <div class="alert alert-danger" role="alert" data-bind="visible:true" style="display: none">
        <span data-bind="text: errorMessager.message"></span>
    </div>
    <!-- /ko -->
    <div data-bind="visible:true" style="display: none">
        <div data-bind="visible: isDataLoading">
            @Html.Partial(MVC.Shared.Views._Spinner)
        </div>
    </div>
    
    <div class="personal-maximums container @(isResetButtonVisible? "collapse show": "collapse")" id="collapseExample">
        <div class="row justify-content-md-center">
            @{
                if (isResetButtonVisible)
                {
                    @Html.ActionLink("Reset filter",MVC.Persons.Index(), new { @class = "col-auto item bg-warning text-light rounded px-2 py-1 m-1" })
                }
                foreach (PersonExerciseMaximumViewModel maximum in Model.PersonMaximums)
                {
                    @Html.ActionLink(string.Format("{0} : {1}", maximum.ExerciseDisplayName, maximum.MaximumWeight), MVC.Persons.Index(predefinedUserId, maximum.ExerciseId), new { @class = "col-auto item bg-info text-light rounded px-2 py-1 m-1" })
                }

            }
        </div>
    </div>
    <div class="activities-list container">
        @{
            <!-- ko foreach:allWorkouts-->
            <div class="row">
                <div data-bind="css:{'person-workout':canBeRemovedByCurrentUser}" class="done-item offset-lg-3 col col-lg-5 my-2 px-3 py-2 rounded">
                    <div class="item-header d-flex flex-row justify-content-between  ">
                        <div class="username">
                            <a class="text-info" data-bind="attr: { href: '/?userId='+ workouterId}, text: workouterName">

                            </a>
                        </div>
                        <div class="">
                            <span class="" data-bind="text:displayDate"></span>
                            <!-- ko if:canBeRemovedByCurrentUser-->
                            <a class="remove-workout pl-1 text-secondary pointer" title="Remove your workout" data-bind="click: function(){$parent.removeWorkoutConfirmation(crossfitterWorkoutId);}">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </a>
                            <!-- /ko -->
                        </div>
                    </div>
                    <div class="item-body pt-1">
                        <span class="workout-header d-flex justify-content-between">
                            <span class="workout-title">
                                <span data-bind="text:workoutViewModel.workoutTypeDisplay"></span>:
                                <!-- ko if:workoutViewModel.workoutType == @((int)RoutineComplexType.ForTime)-->
                                <span data-bind="text:workoutViewModel.roundsCount"></span>
                                <span>rounds</span>
                                <!-- /ko -->
                                <!-- ko if:workoutViewModel.workoutType == @((int)RoutineComplexType.AMRAP)-->
                                <span data-bind="text:workoutViewModel.timeToWork"></span>
                                <!-- /ko -->
                            </span>
                            <span class="cap-time-info" data-bind="if:workoutViewModel.timeCap">
                                <span>Cap: </span>
                                <span data-bind="text:workoutViewModel.timeCap"></span>
                            </span>
                        </span>
                        <div class="workout-exercises pl-3 pt-1">
                            <!-- ko foreach:workoutViewModel.exercisesToDoList-->
                            <div class="exercise">
                                <span data-bind="text:title"></span>:
                                <!-- ko foreach:exerciseMeasures-->
                                <!-- ko if:exerciseMeasureType.measureValue != null -->
                                <!-- ko if:exerciseMeasureType.measureType == @((int)MeasureTypeViewModel.Count)-->
                                <span data-bind="text:exerciseMeasureType.measureValue"></span>
                                <!-- /ko -->
                                <!-- ko if:exerciseMeasureType.measureType == @((int)MeasureTypeViewModel.Distance)-->
                                <span data-bind="text:exerciseMeasureType.measureValue"></span>
                                <span> meters</span>
                                <!-- /ko -->
                                <!-- ko if:exerciseMeasureType.measureType == @((int)MeasureTypeViewModel.Weight)-->
                                (<span data-bind="text:exerciseMeasureType.measureValue"></span>
                                <span> kgs</span>)
                                <!-- /ko -->
                                <!-- ko if:exerciseMeasureType.measureType == @((int)MeasureTypeViewModel.Calories)-->
                                (<span data-bind="text:exerciseMeasureType.measureValue"></span>
                                <span> calories  </span>)
                                <!-- /ko -->
                                <!-- ko if:exerciseMeasureType.measureType == @((int)MeasureTypeViewModel.Height)-->
                                (<span data-bind="text:exerciseMeasureType.measureValue"></span>
                                <span> cm</span>)
                                <!-- /ko -->
                                <!-- /ko -->
                                <!-- /ko -->
                                <!-- ko if: $parent.hasNewMaximum && isNewWeightMaximum -->
                                <span class="new-record" title="Person new weight maximum!">
                                    <span class="fa-layers fa-fw">
                                        <i class="fas fa-trophy"></i>
                                        <i class="fa-inverse fas fa-star" data-fa-transform="shrink-8 up-3 "></i>
                                    </span>
                                </span>
                                <!-- /ko -->
                            </div>
                            <!-- /ko -->
                        </div>
                        <div class="text-right">
                            <span class="workout-result">
                                <!-- ko if:workoutViewModel.workoutType == @((int)RoutineComplexType.ForTime)-->
                                <!-- ko if:repsToFinishOnCapTime-->
                                <span><i class="far fa-smile"></i> Cap + <span data-bind="text:repsToFinishOnCapTime"></span></span>
                                <!-- /ko -->
                                <!-- ko ifnot:repsToFinishOnCapTime-->
                                <span><i class="far fa-clock"></i> Total time: <span data-bind="text:timePassed"></span></span>
                                <!-- /ko -->
                                <!-- /ko -->
                                <!-- ko if:workoutViewModel.workoutType == @((int)RoutineComplexType.AMRAP)-->
                                <span>
                                    <i class="fas fa-hashtag"></i> Result rounds:
                                    <span data-bind="text:roundsFinished"></span>
                                    <!-- ko if:partialRepsFinished-->
                                    + <span data-bind="text:partialRepsFinished"></span> partials
                                    <!-- /ko -->
                                </span>
                                <!-- /ko -->
                                <!-- ko if:workoutViewModel.workoutType == @((int)RoutineComplexType.EMOM)-->
                                <span>
                                    <i class="far fa-clock"></i> Work time: <span data-bind="text:workoutViewModel.timeToWork"></span>
                                </span>
                                <!-- /ko -->
                            </span>
                        </div>
                    </div>
                    <div class="item-footer text-right pt-1">
                        <div class="action-buttons">
                            <!-- ko if:canBeRemovedByCurrentUser-->
                            @* href="/Crossfitter/ManageWorkout?workoutId=137" *@
                            <a class="edit-workout-action pointer text-info" data-bind="attr: { href: '/Crossfitter/ManageWorkout?workoutId='+ workoutViewModel.id + '&crossfitterWorkoutId=' + crossfitterWorkoutId}">
                                <i class="fas fa-edit "></i>
                            </a>
                            <!-- /ko -->
                            <a class="repeat-workout-action pointer text-success pl-1" data-bind="attr: { href: '/Crossfitter/ManageWorkout?workoutId='+ workoutViewModel.id}">
                                <i class="fas fa-plus "></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /ko -->

        }
        <!-- ko if:allWorkouts().length == 0-->
            <img class="rounded mx-auto d-block img-fluid pt-4" src="@Content.img.empty_jpg" alt="Nothing here :)" />
        <!-- /ko -->
    </div>
</div>
@Html.Partial(MVC.Persons.Views.ViewNames._RemoveWorkoutTemplate)

@section styles{
    @Styles.Render("~/Content/home")
}

@section Scripts{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/bootstrap")

    @Scripts.Render("~/bundles/general-models")

    @Scripts.Render("~/bundles/home")
    <script>
        $(function() {
            const path = "@Url.Content("~")";
            const model = new Pages.HomePageController({
                pathToApp: path,
                userId: '@predefinedUserId',
                exerciseId: '@exerciseId'
            });
            ko.applyBindings(model);
        });
    </script>
}

